# Test code (simple q learner (discretized state & action space)):

import sys
import random
import numpy as np
import gym
from envs.pension_env import PensionEnv
from discretize import Discretizer

# env = PensionEnv()
# env = gym.make('Pendulum-v0')
# env = gym.make('CartPole-v0')
# env = gym.make('FrozenLake-v0')
env = gym.make('MountainCar-v0')

num_bins = 20
log_bins = False

statesDisc = None
print("State space", env.observation_space)
if type(env.observation_space) is gym.spaces.box.Box:
    discreteStates = False
    print("- low:", env.observation_space.low)
    print("- high:", env.observation_space.high)
    state_bins = np.repeat([num_bins], len(env.observation_space.low))
    state_discretizer = Discretizer(env.observation_space.low,
                                    env.observation_space.high,
                                    state_bins,
                                    log=log_bins)
    print("state grid", state_discretizer.grid)
    # todo: check for missing dims
    statesDisc = gym.spaces.discrete.Discrete(state_discretizer.grid.size)
elif type(env.observation_space) is gym.spaces.discrete.Discrete:
    discreteStates = True
    statesDisc = env.observation_space
else:
    raise NotImplementedError("Can only work with Discrete or Box type state spaces.")

actionsDisc = None
print("Action space:", env.action_space)
if type(env.action_space) is gym.spaces.box.Box:
    discreteActions = False
    print("Action space - low:", env.action_space.low)
    print("Action space - high:", env.action_space.high)
    action_bins = np.repeat([num_bins], len(env.action_space.low))
    action_discretizer = Discretizer(env.action_space.low,
                                     env.action_space.high,
                                     action_bins,
                                     log=log_bins)
    print("action grid", action_discretizer.grid)
    # todo: check other dims:
    actionsDisc = gym.spaces.discrete.Discrete(action_discretizer.grid.size)
elif type(env.action_space) is gym.spaces.discrete.Discrete:
    discreteActions = True
    actionsDisc = env.action_space
else:
    raise NotImplementedError(
            "Can only work with Discrete or Box type action spaces.")

# disc = discretize([35, 1000, 10000], state_grid)
# print(disc)
# print(undiscretize(disc, state_grid))


def stateKeyFor(discreteObs):
    if discreteObs.shape == ():
        discreteObs = np.reshape(discreteObs, (1,))
    return "-".join([str(elem) for elem in discreteObs])


def getQTableDefault():
    return 0  # -10000000
    # return random.random()-0.5


def getActions(discreteObs, qTable):
    keyStart = stateKeyFor(discreteObs)
    return [qTable.get(keyStart + "-" + str(aIdx), getQTableDefault())
            for aIdx in range(actionsDisc.n)]


def maxQ2(discreteObs, qTable):
    if discreteObs.shape == ():
        discreteObs = np.reshape(discreteObs, (1,))
    actions = getActions(discreteObs, qTable)
    bestActionIdx = np.argmax(actions)
    return bestActionIdx, actions[bestActionIdx]


def maxQ(discreteObs, qTable):
    if discreteObs.shape == ():
        discreteObs = np.reshape(discreteObs, (1,))
    keyStart = stateKeyFor(discreteObs)
    bestActionIdx = 0
    highestVal = qTable.get(keyStart + "-" + str(bestActionIdx), getQTableDefault())
    for aIdx in range(1, actionsDisc.n):  # start at 1 because we already visited 0
        key = keyStart + "-" + str(aIdx)
        if key in qTable:
            val = qTable[key]
            if (val > highestVal):
                highestVal = val
                bestActionIdx = aIdx
            # print("maxQ found something", key, aIdx, val)
    # if highestVal == -np.inf:
    #     highestVal = 0.0
    return bestActionIdx, highestVal


def print_q(qTable):
    for s in range(statesDisc.n):
        if discreteStates:
            s = np.array(s)
        else:  # todo
            # indices = np.unravel_index(range(statesDisc.n), state_grid.shape)
            s = state_discretizer.grid[s]
        print([qTable.get(stateKeyFor(s) + "-" + str(a), getQTableDefault()) for a in range(actionsDisc.n)])


def q_learn(env,
            alpha_min=0.1,
            alpha_decay=1,  # default: fixed alpha (= alpha_min)
            gamma=0.99,
            epsilon_min=0.1,
            epsilon_decay=1,  # default: fixed epsilon (= epsilon_min)
            episodes=100,
            max_steps=1000,
            q_table={},
            average_rewards=False):
    '''Generic Q-Learning algorithm. Returns the Q-Table.'''

    # todo make self-contained

    alpha = 1.0  # initial alpha, will decay
    epsilon = 1.0  # initial epsilon, will decay
    overall = 0
    last_100 = np.zeros((100,))
    aggr_text = "average" if average_rewards else "cumulative"
    for episode in range(episodes):
        # decay defore first episode
        # to make fixed (min_)alpha/epsilon possible with *_decay=1
        alpha = max(alpha * (1-alpha_decay), alpha_min)
        epsilon = max(epsilon * (1-epsilon_decay), epsilon_min)

        cumul_reward = 0
        observation = env.reset()
        # print("size of q table:", len(q_table.keys()))
        # lastHumanId = -1
        for t in range(max_steps):
            # env.render()
            prev_obs = np.array(observation) if discreteStates else state_discretizer.discretize(observation)
            # print("Observation:")
            # print(observation)
            # print("becomes discretized into:")
            # print(prev_obs)

            if alpha == 0 and hasattr(env, "render"):
                env.render()

            # Select action according to epsilon-greedy policy
            actionIdx = actionsDisc.sample()  # random
            if random.random() > epsilon:  # greedy/argmax
                actionIdx = maxQ(prev_obs, q_table)[0]
            action = actionIdx if discreteActions else action_discretizer.undiscretize([actionIdx])
            # print("chosen actionIdx {}, action {}".format(actionIdx, action))

            # Take action
            observation, reward, done, info = env.step(action)
            curr_obs = np.array(observation) if discreteStates else state_discretizer.discretize(observation)
            # print(maxQ(curr_obs, q_table))

            # Update the state that we acted on
            stateActionKey = stateKeyFor(prev_obs)+"-"+str(actionIdx)
            # print(stateActionKey)
            if hasattr(env, "logger") and env.logger:
                print("year", info["year"],
                        "funds", info["company"].funds,
                        "humans", len([h for h in env.humans if h.active]),
                        "currAge", info["human"].age,
                        "hFunds", info["human"].funds,
                        "stateActionkey", stateActionKey, file=env.logger)

            qValOld = q_table.get(stateActionKey, getQTableDefault())
            qValNew = qValOld + alpha*(reward + gamma*maxQ(curr_obs, q_table)[1] - qValOld)
            # if qValOld != q_table_default:
            #    print(stateActionKey, qValOld, "<--", qValNew)
            q_table[stateActionKey] = qValNew

            # h = info["human"]
            # if (h.id != lastHumanId):
            #    print("###### lastHuman {} != h {}".format(lastHumanId, h.id))
            # else:
            #    print("######## A-OK")
            # lastHumanId = info["nextHuman"].id
            # c = info["company"]
            # print(info["year"], "human:", h.id, h.age, h.funds, h.lastTransaction, h.happiness, "reward:", reward, "company:", c.funds, c.reputation)
            cumul_reward += reward
            if done:
                aggr_reward = cumul_reward / (t+1) if average_rewards else cumul_reward
                overall += aggr_reward
                last_100[episode % 100] = aggr_reward
                print("Episode {} finished after {} timesteps with {} reward {} (last 100 mean = {})".format(episode, t+1, aggr_text, aggr_reward, last_100.mean()))
                if type(env).__name__ == "PensionEnv":
                    print("q table size {}, epsilon {}, alpha {}, #humans {}, reputation {}".format(len(q_table.keys()), epsilon, alpha, len([h for h in env.humans if h.active]), info["company"].reputation))
                else:
                    print("q table size {}, epsilon {}, alpha {}".format(len(q_table.keys()), epsilon, alpha))
                break
    print("Overall {} reward: {}".format(aggr_text, overall/episodes))
    print("Average reward last 100 episodes:", last_100.mean())
    return q_table


# Run Q-Learning

# PensionEnv
print("Each episode takes 750 years (with one time step per year per human).")

print("\nLEARNING:\n")


# env.logger = sys.stderr

qTable = q_learn(env,
                 alpha_min=0.1,     # temperature/learning rate, was 0.01
                 alpha_decay=1, # reduction factor per episode, was 0.003
                 gamma=0.99,         # discount factor, was 0.99
                 epsilon_min=0.03,  # minimal epsilon (exploration rate for e-greedy policy), was 0.03
                 epsilon_decay=0.001,   # reduction factor per episode, was 0.003
                 episodes=10000,
                 max_steps=20000,   # abort episode after this number of steps
                 q_table={},
                 average_rewards=False)


# test run:


print("\nTESTING:\n")

if type(env).__name__ == "PensionEnv":
    env.logger = sys.stdout

qTable2 = q_learn(env,
                 alpha_min=0,       # temperature/learning rate
                 alpha_decay=1,     # reduction factor per episode, was 0.003
                 gamma=0,           # discount factor, was 0.99
                 epsilon_min=0.0,   # minimal epsilon (exploration rate for e-greedy policy)
                 epsilon_decay=1,   # reduction factor per episode, was 0.003
                 episodes=3,
                 max_steps=20000,   # abort episode after this number of steps
                 q_table=qTable,
                 average_rewards=False)



# qTable = q_learn(env,
#                  alpha_min=0.01,  # temperature/learning rate
#                  gamma=0.95,  # discount factor, was 0.95
#                  epsilon_min=0.03,    # minimal epsilon (exploration rate for e-greedy policy)
#                  decay=0.995,  #  reduction factor per episode, was 0.997
#                  episodes=1000,
#                  max_steps=2000,  # abort episode after this number of steps
#                  q_table={})


print(qTable)

# (year, "human:", i, h.age, fundsBefore, h.funds, h.happiness, "reward:", r, "company:", companies[0].funds, companies[0].reputation)

# A mountain car qTable with score around ca. 121 ±10:
# qTable = {'9-10-0': -73.12017898087547, '9-10-1': -73.23123549799259, '8-10-1': -73.09067191136886, '8-10-2': -72.79374061781787, '8-10-0': -72.31342448570918, '7-10-0': -72.36936744778153, '7-10-1': -72.15147711860992, '7-10-2': -70.20773250202308, '7-11-1': -71.6209913800744, '7-11-0': -71.73492033306925, '7-11-2': -69.3768625632345, '8-11-1': -73.09492899445836, '8-11-2': -69.00422680865434, '8-11-0': -73.63577689981635, '9-11-2': -73.28749502517543, '9-11-1': -73.27539783070293, '9-11-0': -73.26687036812373, '9-9-2': -72.14577165703987, '8-9-2': -71.96171994134811, '8-9-1': -71.97115520693058, '8-9-0': -71.83170626857047, '7-9-2': -70.79334872515481, '7-9-0': -70.88573615410644, '7-9-1': -71.42842790697674, '7-12-1': -69.83847380597693, '7-12-2': -68.01119924001986, '8-12-2': -67.71919530911894, '8-13-2': -66.32938096605274, '8-13-0': -68.2310802473612, '8-13-1': -68.02545915828544, '9-13-1': -66.92114348975342, '9-13-2': -65.85610238397967, '9-13-0': -67.63052149478713, '9-12-2': -66.41396851121307, '10-13-0': -66.47859112128799, '10-12-2': -63.42979642852997, '10-12-0': -68.20517459169741, '10-11-2': -69.05682875987324, '10-11-0': -68.93933010570493, '10-10-0': -67.9139968398441, '10-10-1': -68.283670298448, '10-10-2': -68.28808914148425, '10-9-1': -66.288385150408, '10-9-2': -65.40111243526721, '10-9-0': -58.50504553845681, '9-9-0': -72.16193017392956, '9-8-0': -63.0857387231956, '9-8-2': -65.85659625616267, '8-8-0': -70.8625883645554, '8-8-1': -70.74967244536202, '8-8-2': -70.90545164618769, '7-8-0': -70.32501632463405, '7-8-1': -70.32904220472413, '7-8-2': -70.19407851928246, '6-8-1': -68.98871043829871, '6-8-0': -68.99233361689643, '6-9-0': -68.99671168777576, '5-9-1': -66.58738864023114, '5-9-2': -66.60910660464835, '5-10-1': -66.6996276961464, '5-10-0': -66.67474140516251, '5-10-2': -66.7024110691962, '5-11-1': -66.38270479744688, '5-11-0': -66.49005878842088, '5-12-0': -65.38466287731494, '5-12-1': -65.48818928410041, '6-12-2': -66.47979891864018, '6-12-1': -66.70651900678857, '6-13-1': -65.4937944770712, '6-13-0': -65.50266682975088, '7-13-2': -65.75687932923772, '7-13-0': -66.70305854281828, '7-14-2': -64.81048631859494, '8-14-1': -64.79766954110593, '8-14-2': -64.68197940192725, '9-14-0': -64.14151331276493, '9-14-1': -64.34311839694612, '9-10-2': -73.29903003840224, '9-9-1': -72.1428823314159, '8-12-1': -69.70141529239125, '8-12-0': -70.44320010531266, '9-12-1': -71.38791477754174, '9-12-0': -71.30676886032488, '7-12-0': -68.77070602501291, '10-12-1': -67.18313338774945, '10-11-1': -69.05299292906697, '6-10-0': -68.45812304233513, '6-10-2': -68.00218318325233, '6-10-1': -68.92471502806175, '6-11-0': -67.72004740774312, '6-11-1': -67.72726186213883, '6-11-2': -67.2973567247617, '6-9-1': -68.91786618690888, '6-8-2': -68.96425336213373, '6-9-2': -68.77579071303454, '5-11-2': -66.386571297849, '6-12-0': -66.99656799882828, '8-7-2': -63.722710771096075, '7-13-1': -66.40427497195347, '10-13-1': -64.95845935887655, '10-13-2': -63.89973705560429, '9-8-1': -65.9577413789921, '10-8-0': -56.71093895003542, '7-14-1': -64.79666108321386, '8-14-0': -64.85848758147498, '9-14-2': -63.71772898034497, '11-11-2': -64.08631447121341, '11-11-0': -60.10311502286643, '11-10-1': -63.59901352037801, '11-10-2': -63.58823123596865, '10-8-2': -63.579073938744216, '6-13-2': -65.2320624814964, '11-12-0': -60.9657600717844, '11-11-1': -64.38888033713835, '11-10-0': -59.38116864800768, '10-8-1': -62.543784126114126, '9-7-1': -60.83357140189675, '9-7-2': -61.574455791908946, '8-7-1': -63.98492301447549, '7-7-2': -63.34886234779449, '5-9-0': -66.57535046617596, '5-12-2': -65.35840045346276, '9-15-1': -62.946586887983216, '10-14-1': -63.07061979630511, '10-14-0': -63.306134136474526, '11-13-1': -63.54393523819704, '11-13-0': -64.4167889206265, '11-12-1': -63.18305121814427, '11-12-2': -64.57485386609669, '12-11-1': -59.57927446674519, '12-11-2': -59.25398956198141, '12-10-1': -59.0538479404503, '11-9-0': -58.126719256795226, '11-9-1': -62.524875205266525, '11-8-1': -61.24044426456837, '11-8-2': -61.26136393446474, '10-7-1': -55.28561912674178, '9-7-0': -54.37378314922683, '8-6-1': -59.48900712226363, '8-6-2': -59.79329607799743, '8-7-0': -59.006351207786366, '7-6-2': -59.144513725856655, '7-7-1': -63.610230281244036, '7-7-0': -60.02625597987683, '6-7-0': -59.421436610000484, '6-7-1': -63.430066209382915, '5-8-2': -64.6237008139359, '5-8-0': -63.2996143883534, '4-9-1': -60.325858026688906, '4-9-2': -61.84249894584472, '4-9-0': -60.24975886934078, '4-10-0': -61.852838921993616, '4-10-2': -60.77106508051877, '4-11-1': -61.5971602125906, '4-11-2': -60.05443711339613, '4-12-1': -59.59316214435323, '5-13-1': -63.37095861259276, '5-13-0': -63.57028668529534, '5-14-1': -39.57581681620886, '6-14-0': -62.11051786840024, '6-14-2': -62.142781380863674, '7-14-0': -64.97316140795786, '6-14-1': -62.37835767467063, '9-15-0': -62.93077198591852, '10-14-2': -62.7255123275786, '11-14-0': -61.99531501135158, '11-13-2': -61.83872279326479, '12-13-0': -59.6738291326111, '12-12-1': -59.598497284426664, '12-12-2': -59.194369631447046, '12-12-0': -59.6575891290853, '12-11-0': -57.99093531711129, '12-10-2': -58.700304895477906, '12-10-0': -56.44389215297007, '12-9-2': -57.15225437080464, '12-9-0': -55.33053299262888, '11-8-0': -56.394223110621546, '11-7-2': -56.081786161901086, '10-7-0': -59.76175070406476, '9-6-0': -53.02386064525848, '11-9-2': -62.859834219283904, '5-13-2': -61.079704466062864, '6-7-2': -62.770314227263576, '5-7-0': -57.19562780574024, '5-7-2': -59.55253741154171, '4-12-0': -59.73595245455974, '7-15-0': -60.884610688529854, '7-15-2': -60.17566740133882, '8-15-0': -62.85907786294446, '8-15-2': -62.867982223029585, '12-9-1': -57.23458461886826, '11-7-0': -53.826128130548895, '10-7-2': -59.97277943426639, '8-6-0': -52.617892003273255, '7-6-0': -51.33042639932228, '7-6-1': -58.57006176732967, '5-7-1': -61.003894673798406, '4-8-2': -60.12608667847154, '4-10-1': -61.965551571865234, '4-11-0': -61.678781254676736, '4-12-2': -45.784308966069204, '5-14-2': -54.906503172995286, '5-8-1': -64.05075652678995, '7-15-1': -60.69767562540065, '8-15-1': -62.84789545945417, '9-6-1': -58.946605509482154, '9-6-2': -58.72111989581445, '9-15-2': -62.85053913133397, '10-15-1': -62.31947758200889, '10-15-2': -62.308654396523195, '11-15-2': -60.3543187661907, '11-14-1': -61.968456998949094, '11-14-2': -61.773376346669075, '12-14-2': -59.86792114419504, '12-14-1': -59.84675130604832, '12-13-1': -60.002665353306845, '13-12-2': -57.4685699624002, '13-12-0': -57.4062644254145, '13-11-0': -56.81436237169421, '13-11-1': -57.00323892024035, '13-10-2': -56.53880582082352, '13-10-1': -56.553870213633076, '13-9-1': -55.2264330086829, '13-9-0': -55.03759186303952, '12-8-1': -56.234772776228525, '12-7-0': -52.5588807795513, '12-7-2': -53.2714164148985, '11-7-1': -56.48120522110797, '11-6-0': -51.65085965209662, '10-6-0': -51.59032597595539, '10-5-0': -50.28501929037468, '4-7-2': -48.92711593259741, '10-15-0': -62.34144627909225, '5-14-0': -55.52684991919752, '12-13-2': -59.989955317254356, '12-8-2': -56.506093285773595, '12-8-0': -54.248824667164655, '10-6-2': -53.928348299096825, '6-6-2': -55.876082335606405, '4-8-1': -58.514483243408584, '4-8-0': -52.86038969771106, '3-10-0': -54.33053699355522, '3-10-2': -49.5307192091808, '3-11-1': -55.161550633935626, '12-14-0': -59.83817057136639, '13-12-1': -57.43146214226764, '13-10-0': -56.31500313140051, '7-5-1': -50.22671506911571, '6-6-0': -50.1020848011412, '5-6-0': -48.99516743677653, '5-6-2': -55.86269317549398, '4-7-0': -57.31918402500535, '3-8-0': -54.403889369547414, '3-9-0': -55.478240345604576, '3-9-1': -50.717045512238876, '3-11-2': -47.46707651497402, '3-12-2': -53.09551099506595, '3-12-0': -45.263471817866325, '3-12-1': -52.749536891926375, '3-13-0': -53.02760243421949, '4-13-0': -54.98190273303045, '4-13-2': -54.6088384716668, '4-13-1': -41.79900152080115, '4-14-0': -51.401029641655114, '5-15-0': -51.97285078516151, '8-5-2': -51.13170459305155, '13-9-2': -55.21979250713721, '10-6-1': -54.01546920410833, '6-6-1': -57.45119756335936, '3-11-0': -55.0589882233606, '6-15-2': -36.58167062114574, '6-15-0': -57.11711902627513, '4-7-1': -56.566395534882275, '6-15-1': -51.934077319494406, '11-15-0': -60.36758915650715, '3-10-1': -55.82883485681984, '5-6-1': -54.55113492346923, '3-8-1': -55.83005900396941, '3-9-2': -56.11829032088965, '8-5-0': -49.13060273212106, '7-5-0': -48.96919082058209, '7-5-2': -51.230649678424555, '8-5-1': -50.85215999942866, '5-15-2': -36.33937072526651, '8-16-1': -57.34462016543628, '8-16-2': -33.88344899801133, '8-16-0': -59.559625675576534, '9-16-2': -50.34113230269981, '9-16-1': -58.88362966290526, '12-15-0': -58.426012307876164, '13-14-1': -57.22745291080332, '13-13-1': -57.52202732497359, '13-13-0': -57.47470496274744, '13-13-2': -57.52421926578712, '14-11-0': -55.46982418277269, '14-10-0': -54.93819610318287, '14-10-2': -54.91505497012511, '13-8-0': -53.2268342088718, '12-7-1': -53.35545288628987, '12-6-0': -51.265955207027524, '11-15-1': -60.35598527130349, '11-6-1': -51.96905082597437, '6-5-1': -50.17635416739408, '4-6-0': -47.63265021010952, '4-6-1': -50.62488664112799, '3-7-0': -45.770865769948216, '3-7-1': -52.060745898950174, '3-8-2': -50.237523606395705, '2-8-0': -43.516516457870416, '2-9-2': -45.07691451290549, '2-9-1': -45.11866283854168, '2-10-0': -46.02604809557298, '2-10-2': -46.363944457834464, '13-8-2': -53.78416858909865, '13-11-2': -57.032364481546146, '3-13-2': -40.44835075077894, '4-14-2': -39.474004624112695, '10-5-2': -50.3321053449992, '9-5-1': -50.52340785688697, '11-6-2': -51.88890827455564, '9-5-2': -50.74451044553257, '7-16-2': -33.429257787616635, '9-16-0': -59.67602894108945, '13-8-1': -53.32040711238998, '10-5-1': -50.3024931814405, '5-15-1': -48.553583398453, '7-16-1': -51.38312366710809, '4-14-1': -52.38681619201238, '3-13-1': -54.17030490902004, '9-5-0': -49.80357734206131, '6-5-0': -48.5853077489121, '2-10-1': -42.14409878283673, '2-11-0': -48.026605243868865, '4-15-0': -36.28591713415206, '6-16-2': -34.162319601335604, '10-16-2': -54.192843905696854, '10-16-1': -58.23830304800468, '6-5-2': -48.841913426723714, '7-16-0': -53.97922742328492, '10-16-0': -58.447423210685706, '12-15-2': -56.6167944460478, '13-14-0': -57.23358624393891, '11-16-1': -56.92685551486744, '11-16-2': -35.23165494255121, '14-13-2': -56.80316844038542, '2-9-0': -41.956835526406316, '2-11-2': -46.98114673813915, '2-12-0': -44.73454478705112, '2-12-1': -44.73379264866049, '4-6-2': -52.91022698050506, '13-14-2': -57.593732879240335, '14-11-1': -55.581121571438175, '14-11-2': -55.508917024564035, '13-7-0': -52.13593798272968, '12-6-2': -51.27731016329541, '11-5-0': -49.93838182813767, '14-12-0': -56.18180197543679, '14-12-1': -56.34813986687811, '14-9-0': -53.79230038538326, '13-7-2': -52.17775603387854, '3-7-2': -52.167264550525104, '5-5-2': -48.092068756030656, '6-16-0': -47.704187963609726, '6-16-1': -47.18976208596028, '11-16-0': -58.10648510504835, '9-17-0': -38.41758300252304, '12-15-1': -58.02307879393507, '14-13-0': -56.78189942649274, '14-13-1': -56.278130661127165, '14-9-1': -53.85251835283508, '14-8-0': -52.70915031361409, '11-5-1': -49.946268022919476, '4-15-2': -44.748371962368225, '2-11-1': -38.3505636067833, '3-14-0': -43.556320675031024, '2-12-2': -34.72952341804771, '4-15-1': -45.18371205812473, '5-16-2': -42.78119702216302, '7-17-0': -43.46840000645769, '7-17-2': -31.38778770343811, '8-17-0': -40.57737014241954, '12-16-0': -50.986166032852395, '13-15-1': -57.101468870558136, '14-12-2': -56.354610629872816, '15-11-0': -53.810417637144866, '14-7-1': -51.696953935179124, '5-5-0': -46.98399351855931, '4-5-2': -46.35723285502097, '14-9-2': -53.95290133998989, '13-7-1': -52.1149920143307, '8-4-2': -48.58085695537851, '3-6-0': -44.011086388865536, '3-6-2': -44.82574844888819, '2-7-0': -41.475138814544906, '1-8-0': -39.38305836377664, '1-9-0': -39.17280935782563, '5-5-1': -48.30082372090642, '2-8-1': -41.08422773050661, '2-13-0': -38.146242043049746, '2-13-2': -33.59062165169041, '5-16-0': -34.24012537521329, '14-10-1': -54.87224693985403, '12-6-1': -51.274422790483555, '9-4-0': -48.340680737262865, '8-4-0': -48.519119429236724, '7-4-0': -48.14765081461035, '6-4-0': -47.547420311604306, '6-4-1': -47.491659579186155, '5-4-2': -45.72128209202333, '5-4-1': -45.83657268667302, '4-4-1': -43.7151900662151, '3-5-2': -43.88465630541083, '2-6-0': -42.14382305223929, '1-7-0': -39.859781887217984, '1-10-0': -37.421061312601736, '1-11-2': -35.56850620768865, '1-11-0': -36.21063217870434, '1-12-0': -34.945051740026294, '1-12-2': -34.19502124491102, '3-6-1': -44.721888474438146, '1-10-2': -36.8345374906336, '1-11-1': -36.18552785653836, '11-5-2': -49.94292121458935, '9-4-2': -48.40198321253906, '8-4-1': -48.489239834601165, '6-4-2': -47.38615850017849, '2-7-1': -41.9505508839554, '1-10-1': -37.729677414901424, '2-13-1': -36.218951332730455, '2-14-1': -32.29095858526525, '15-12-0': -53.921454187342285, '15-10-0': -53.067189102239055, '14-8-2': -52.96583061032505, '13-6-2': -51.0421138901644, '2-8-2': -43.9245239668427, '7-4-1': -48.11608361556535, '9-17-1': -39.12445371928389, '13-15-0': -53.71708535504203, '14-14-0': -55.330190848510775, '12-16-2': -24.886038535420088, '12-16-1': -46.02917476510292, '14-8-1': -52.97599164279919, '2-7-2': -41.94197311068866, '15-12-2': -54.21595135442486, '15-11-1': -53.44040449389362, '15-10-2': -53.179045773953185, '15-9-0': -52.35180029206144, '10-4-2': -48.832340480640674, '10-4-0': -48.57644543892125, '9-4-1': -48.34080021939462, '3-14-1': -33.41494275195947, '3-14-2': -43.08682247043666, '13-15-2': -43.73600202022983, '13-6-1': -51.07103177152507, '4-5-0': -45.56890876095438, '5-16-1': -42.85570292184146, '8-17-1': -42.11200355803195, '10-17-0': -41.08080054868661, '5-4-0': -45.73164992004608, '3-5-0': -43.86456301440967, '2-5-0': -41.378829667962876, '1-6-2': -39.65518737456739, '1-6-0': -39.96225006773486, '1-7-1': -39.80807830379345, '1-13-0': -33.250394600179646, '4-4-2': -43.78739566100138, '1-7-2': -39.657379129940544, '1-13-2': -32.5294526907528, '4-5-1': -46.39921567993264, '1-9-1': -39.85821607461155, '1-9-2': -37.98014623879557, '3-15-0': -30.127708166293303, '4-16-0': -28.90585941172781, '6-17-2': -25.767326809843105, '7-17-1': -40.95805546172997, '14-14-2': -46.45890763470215, '15-13-0': -53.11584476180959, '15-8-0': -51.02800849782064, '14-7-0': -51.22464078202212, '14-6-2': -50.0247259850843, '13-6-0': -50.45594785343367, '12-5-2': -49.94063899021819, '12-5-0': -50.062537133475814, '11-4-1': -49.01889985430997, '10-4-1': -48.893583403544625, '8-17-2': -30.244008728333863, '7-4-2': -48.175222186698065, '1-12-1': -35.08683232415825, '15-11-2': -53.82107099660309, '8-3-0': -47.077764285739235, '7-3-0': -46.30598166920335, '6-3-0': -45.679659925704506, '5-3-0': -44.97833024406566, '4-4-0': -43.688166307634944, '3-4-0': -43.29598618608075, '2-4-0': -41.992309990942815, '2-5-1': -41.77619401020292, '1-5-1': -40.51004548001224, '1-5-0': -37.27097331131925, '2-14-2': -30.82908875053145, '3-15-1': -30.50618125446624, '4-16-2': -26.944650933222494, '5-17-0': -26.141629514322585, '9-17-2': -29.11296529795456, '15-14-1': -21.91930852824798, '15-12-1': -54.23435779627344, '16-11-2': -50.142706772905456, '16-10-1': -49.65130974102347, '15-9-2': -52.468089551970074, '1-8-1': -39.27058328580123, '2-14-0': -32.59690955139796, '2-6-1': -42.11916075789313, '1-8-2': -38.98134837408924, '14-14-1': -53.790535324519674, '6-17-0': -33.51115127464117, '10-17-1': -42.62526325497927, '10-17-2': -27.582582723085938, '11-17-0': -38.418488444869936, '11-17-1': -35.88315088825098, '13-16-2': -21.43960318128699, '13-16-1': -36.242729212140084, '14-15-0': -48.559551901784836, '3-5-1': -43.906396775542134, '13-16-0': -35.72786600268194, '15-13-1': -50.503281840190915, '15-10-1': -53.184886380541826, '14-6-1': -50.04851247200809, '11-4-0': -48.92620577911235, '9-3-2': -47.6616440848688, '9-3-0': -47.552422053003255, '7-3-2': -46.33256192637551, '5-3-1': -44.61089187835988, '2-6-2': -42.14878523602371, '1-6-1': -39.632240065823524, '1-13-1': -33.18023534459646, '3-15-2': -28.815251605804004, '14-15-1': -45.03148928064863, '15-14-0': -49.256289155157525, '15-9-1': -52.497848491439214, '14-7-2': -51.64683733633159, '4-16-1': -28.56632475435809, '6-17-1': -34.12307124252308, '8-18-0': -24.56911894540741, '15-13-2': -52.995199331782075, '13-5-0': -49.38665805944646, '4-3-0': -43.732853160863016, '3-4-2': -42.78287860956536, '10-3-0': -47.750396062655945, '8-3-1': -47.16839101216814, '6-3-1': -45.653012008892546, '15-8-1': -51.37287570371385, '2-5-2': -41.31804371772344, '14-6-0': -49.16227824741703, '12-5-1': -50.10635786258076, '11-4-2': -49.04676717752524, '7-3-1': -46.32923961643257, '11-17-2': -24.152426781259685, '12-17-0': -34.899869761667176, '14-15-2': -19.21117522799445, '15-14-2': -49.13852867634581, '16-12-1': -49.97348402502687, '16-12-0': -49.141437910127536, '16-11-1': -50.12606012457852, '16-11-0': -50.10530731995896, '12-17-2': -22.185284974353486, '16-10-2': -49.83357090416363, '16-10-0': -49.82414208572934, '15-8-2': -51.370176254387424, '8-3-2': -47.116616536443026, '6-3-2': -46.00633485917878, '5-17-2': -25.265850680759772, '9-3-1': -47.67480469911558, '5-17-1': -26.148683073150952, '2-15-0': -30.255020825298843, '7-18-0': -22.966503861988468, '9-18-0': -26.997520311219535, '15-15-0': -28.97794791409724, '16-14-0': -30.66777424832626, '16-13-0': -49.03482650803698, '16-12-2': -47.41686111044811, '17-12-0': -39.930021434471236, '17-11-1': -41.17783117281828, '17-11-0': -41.233039003845214, '17-10-1': -41.38119031936728, '14-16-0': -25.18771872834429, '16-13-2': -49.03393549522032, '16-9-0': -47.89696490425464, '15-7-0': -47.65370327766326, '13-4-0': -46.78176210802519, '12-4-0': -47.32670811605298, '11-3-0': -47.2762816727354, '10-3-1': -46.78541979199549, '10-2-0': -44.18149479615028, '9-2-1': -46.27476639757392, '8-2-1': -45.982834350087195, '8-2-0': -45.2510605093584, '7-2-0': -44.11343424392736, '6-2-0': -44.48409367013872, '5-2-0': -43.28006188012523, '4-2-0': -42.479234124913404, '4-2-1': -41.83361003491065, '3-3-1': -42.108875630865526, '3-3-0': -42.72364327302142, '2-3-0': -41.83789149445228, '1-3-0': -40.924384347569635, '1-4-1': -41.07983587046065, '13-5-2': -49.46266810717545, '16-9-2': -49.07749964361514, '16-8-1': -46.21726682631848, '16-8-0': -45.33682094615679, '2-15-1': -29.64832999636376, '3-16-0': -30.03561705450725, '12-17-1': -35.2623778773492, '16-13-1': -39.21939728698358, '10-18-1': -26.65225146184652, '8-18-1': -25.531211844283384, '9-18-1': -27.136489532894984, '9-18-2': -21.014283337771865, '10-18-0': -25.20621479945371, '15-15-1': -29.731311435010376, '14-16-2': -17.696820212086052, '15-15-2': -15.675004221864983, '16-14-1': -25.93941059967257, '17-12-2': -37.70125630762639, '17-10-0': -41.33657564222493, '17-9-0': -41.84646454043265, '4-17-0': -28.16140932190944, '6-18-0': -23.902232106628958, '16-9-1': -49.0190908535689, '15-7-1': -49.145182729560766, '10-3-2': -47.73380228019032, '7-18-2': -22.715729969140146, '10-18-2': -20.00616709266646, '13-17-0': -25.811961600823597, '8-18-2': -21.75621000480374, '11-18-2': -18.425374255251853, '11-18-0': -24.287599211384084, '17-13-1': -30.00688088064575, '17-13-0': -30.911436856768255, '2-15-2': -30.44756824081961, '12-18-0': -18.57789687180406, '17-12-1': -39.88860531025671, '4-17-2': -26.19174408199037, '14-16-1': -28.690226900211172, '16-14-2': -14.361017578581459, '18-11-0': -31.188998977018823, '18-11-1': -31.311029511210045, '18-10-0': -32.72252370619616, '17-9-1': -41.12175472787553, '17-8-1': -38.20642955768225, '17-8-2': -37.41219885434381, '17-8-0': -37.57553475131792, '16-8-2': -46.72454962562878, '16-7-1': -42.5635743160048, '16-7-0': -42.55053156112918, '15-6-1': -46.16999948830395, '15-6-0': -46.105608189910456, '14-5-0': -47.216449569168056, '13-4-1': -46.598908753146986, '12-3-0': -41.809962742840874, '12-3-1': -41.46348767985085, '18-12-2': -25.561651143603502, '18-12-0': -28.024712198137028, '18-10-1': -33.4907348050773, '18-10-2': -33.469442030881844, '17-9-2': -41.7440373992502, '16-7-2': -43.12158200660749, '15-6-2': -45.82906071933135, '14-5-2': -47.24011057528889, '13-5-1': -48.57604209459184, '3-16-2': -29.28670402372128, '13-17-1': -26.940907976829973, '17-13-2': -15.870595749769056, '18-13-1': -13.664574894503676, '18-13-2': -11.263754441681126, '18-13-0': -13.885683113056407, '18-12-1': -28.077279049523874, '19-12-0': -16.752790910932735, '19-11-0': -18.833535127362072, '19-11-2': -18.893878487298057, '19-11-1': -18.905228908529704, '19-10-0': -20.005056145934716, '19-9-0': -7.179825009962402, '19-9-1': -6.306787300797048, '18-9-2': -31.311873304546005, '18-9-1': -30.59821257225909, '18-9-0': -31.27635411928886, '18-8-0': -14.752236776815526, '17-7-0': -25.30317649687203, '16-6-2': -28.988287640861145, '16-6-0': -29.067248702020862, '15-5-1': -33.25940130366375, '15-5-0': -33.56822181783051, '14-4-0': -31.652394597621303, '13-3-0': -20.67638718454792, '12-3-2': -41.958370476627984, '1-14-1': -31.715250513150064, '3-4-1': -42.688207700128395, '15-16-0': -18.40084708559012, '16-15-0': -18.072093007934786, '1-4-0': -41.08093923852676, '4-3-1': -43.82731742920385, '9-2-0': -46.25602270185537, '8-2-2': -45.98848803914409, '7-2-2': -45.38852788946705, '6-2-2': -44.72070303199207, '5-2-2': -43.70727016980285, '4-3-2': -42.814346363913074, '17-11-2': -41.19041753929863, '7-18-1': -22.884975844239918, '4-17-1': -28.414730194332417, '6-18-1': -24.29632751366855, '1-14-0': -33.205999845249806, '17-14-0': -14.304150049549632, '18-11-2': -31.10935660748496, '14-5-1': -47.18944605321225, '6-18-2': -23.74226525917735, '12-18-2': -17.589418294397543, '14-17-0': -16.9428003555124, '12-4-1': -48.340870614962576, '11-18-1': -23.579243023470163, '11-3-2': -47.68314216223419, '11-3-1': -47.72896971434052, '5-3-2': -44.53149538416047, '17-10-2': -41.56246784461489, '2-4-1': -39.64030448677346, '2-4-2': -41.90189767350729, '12-4-2': -48.29471808441457, '16-15-1': -18.010402815907888, '7-2-1': -45.41920791170247, '9-2-2': -46.181663093183815, '3-16-1': -27.912808131764912, '5-18-0': -24.348731659325406, '15-16-1': -18.478945062631325, '16-15-2': -12.555072690326302, '17-15-0': -9.993939150952537, '1-14-2': -33.03178342840381, '1-5-2': -40.980500631841736, '14-17-2': -16.249577290490134, '17-14-2': -9.07693549875571, '18-14-0': -9.155422294525811, '19-13-1': -9.19831673098996, '12-18-1': -17.561924283388784, '13-17-2': -18.16329895496034, '17-14-1': -13.339471949033287, '19-13-0': -9.574461183552419, '19-12-1': -16.51283053620512, '17-15-2': -11.808301515788171, '19-12-2': -13.498475700465443, '19-13-2': -9.125832279192238, '15-16-2': -13.628102703589464, '14-17-1': -15.204393094427461, '10-19-0': -19.72081223233309, '9-19-0': -21.03345410812276, '13-18-2': -16.576826454436468, '18-14-1': -8.378355483197726, '19-14-2': -4.780138396841093, '19-14-0': -5.391871192512082, '15-7-2': -49.15453632956387, '13-18-0': -16.574890574243586, '6-2-1': -44.658134150232414, '1-4-2': -38.46372534137291, '8-19-0': -21.23637587171686, '15-17-0': -13.792866579314362, '16-16-0': -12.541749687270297, '18-14-2': -7.679187470597789, '8-19-1': -21.10526364429752, '9-19-1': -20.483586523344997, '17-15-1': -11.732947150079454, '9-19-2': -20.295611777751503, '3-2-0': -37.97808828598251, '2-3-2': -41.82078664127396, '13-4-2': -46.62257924537379, '5-2-1': -43.74883567129279, '10-2-1': -44.05925127711706, '3-3-2': -42.72615892661483, '2-3-1': -40.979450774795204, '16-6-1': -28.738192815911344, '19-14-1': -5.609920491950813, '15-17-2': -13.80693327320882, '16-16-2': -13.051357623931949, '17-16-0': -9.542092405048628, '18-15-0': -7.5098835947222895, '17-16-1': -9.5361582743604, '10-19-2': -19.421951266730506, '19-15-0': -4.102577486489254, '18-15-2': -7.022184768967671, '17-16-2': -9.204525442041284, '19-15-2': -2.0781861303869618, '19-15-1': -3.868472663556761, '7-19-0': -24.06933816916122, '10-19-1': -19.48543840563314, '14-18-2': -14.361253733256186, '16-17-0': -10.513131700676258, '16-16-1': -12.435202788244933, '18-16-0': -6.278968152455788, '13-18-1': -16.761530059975286, '11-19-0': -18.238973813264884, '18-8-2': -17.252104538019513, '15-4-0': -2.8235690308097725, '12-2-0': -2.266035960238961, '13-3-2': -19.237720007467743, '11-2-0': -34.042527517292264, '10-2-2': -43.98044287277373, '1-3-2': -40.50086689566507, '19-10-2': -19.067646211253837, '19-10-1': -19.235490715282456, '18-15-1': -6.761362591181408, '15-17-1': -13.790659842926106, '9-1-0': -9.8223886489779, '8-1-0': -21.797470233914705, '7-1-0': -22.108752594698828, '6-1-0': -28.383025632827426, '5-1-0': -32.85397887566805, '4-1-0': -7.4145139379528775, '4-1-2': -9.122124149937449, '2-2-0': -36.914293641274966, '1-2-0': -17.767967579209234, '14-18-0': -14.428184484610753, '5-18-1': -27.966110914452, '7-19-1': -21.03835116467102, '14-18-1': -14.527907501471873, '8-19-2': -21.137061151701623, '11-19-1': -18.23931598452973, '12-19-0': -16.656159097867558, '16-17-1': -10.502722441118282, '4-2-2': -42.50010652026487, '14-4-2': -31.381460817615316, '11-19-2': -18.307685264435896, '15-18-0': -11.569876977023007, '7-19-2': -23.72722299915004, '18-16-2': -6.133224675832441, '19-16-0': -2.700179098304224, '19-16-1': -3.4722492025405796, '19-16-2': -3.3951969303516565, '13-3-1': -19.936271997293737, '9-1-1': -10.290531995642773, '3-2-1': -39.87706742871939, '10-1-0': -2.002167689839114, '3-1-0': -9.178456325992912, '5-18-2': -27.04441111904749, '17-7-1': -25.810572234236584, '8-1-2': -21.914177999302204, '16-17-2': -10.353890059441362, '18-16-1': -6.292591173071175, '2-1-0': -4.723425363952777, '1-2-1': -17.638669724653795, '18-8-1': -16.947577286940938, '8-1-1': -21.935363197573476, '17-17-0': -7.7221669911850865, '12-19-1': -16.45021753412898, '6-1-2': -31.90920398693652, '11-2-1': -34.192028916244396, '3-2-2': -40.03905206864322, '1-3-1': -40.925622905563735, '17-17-1': -7.64634958453502, '15-18-2': -11.558795891798741, '15-18-1': -11.564905918024737, '6-19-0': -2.216017434768065, '13-19-0': -14.676909673838493, '12-19-2': -16.471238606662222, '5-1-1': -32.95471808342731, '17-17-2': -7.79156435477687, '18-17-0': -4.940914028522607, '18-17-1': -4.980649125254841, '19-17-0': -1.3855053661316594, '1-2-2': -16.012729006429534, '14-4-1': -31.549049221752654, '11-2-2': -34.36317096289099, '7-1-1': -29.883141210372134, '18-17-2': -4.981041147085438, '13-19-1': -14.698250986342725, '17-7-2': -24.660794814671828, '18-7-0': -2.328009468601489, '17-6-0': -2.659357818709796, '16-5-0': -3.188641721964947, '7-1-2': -29.225571552116154, '9-1-2': -7.7813232086257855, '6-1-1': -22.06491761004978, '2-2-1': -19.616382041417403}
